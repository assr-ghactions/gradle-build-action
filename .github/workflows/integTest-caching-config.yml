name: Test caching configuration

on:
  pull_request:
    types: [assigned, review_requested]
  push:
  workflow_dispatch:

env:
  GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX: ${{github.workflow}}#${{github.run_number}}-
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true

jobs:
  seed-build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Setup Gradle
      uses: ./
      with:
        # Add "enterprise" to main cache entry but omit "notifications"
        gradle-home-cache-includes: |
            caches
            enterprise
        # Exclude build-cache from main cache entry
        gradle-home-cache-excludes: |
            caches/build-cache-1
    - name: Build using Gradle wrapper
      working-directory: __tests__/samples/groovy-dsl
      run: ./gradlew test

  # Test that the gradle-user-home cache will cache dependencies, by running build with --offline
  verify-build:
    needs: seed-build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Setup Gradle
      uses: ./
      with:
        # Use the same configuration when restoring state from cache
        gradle-home-cache-includes: |
            caches
            enterprise
        gradle-home-cache-excludes: |
            caches/build-cache-1
        cache-read-only: true
    - name: Execute Gradle build with --offline
      working-directory: __tests__/samples/groovy-dsl
      run: ./gradlew test --offline

  cache-disabled:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Setup Gradle
      uses: ./
      with:
        cache-disabled: true
    - name: Run Gradle build
      id: gradle
      working-directory: __tests__/samples/no-wrapper${{ matrix.build-root-suffix }}
      run: gradle help "-DgradleVersionCheck=${{matrix.gradle}}"
    - name: Check build scan url is captured
      if: ${{ !steps.gradle.outputs.build-scan-url }}
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('No build scan detected')
